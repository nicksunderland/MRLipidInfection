[{"path":"https://nicksunderland.github.io/MRLipidInfection/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 MRLipidInfection authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"can install latest version MRLipidInfection R using:","code":"remotes::install_github(\"nicksunderland/MRLipidInfection\")"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"setup-mrlipidinfection-package","dir":"Articles","previous_headings":"","what":"Setup MRLipidInfection package","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"First need load MRLipidInfection package setup package requirements calling setupMRLipidInfection(). first installation take time download 1000 genomes LD reference panel package file structure ensure PLINK installed locally. plan use Bristol IEU servers LD processing can skip downloads.","code":"library(MRLipidInfection)  setupMRLipidInfection(skip_local_download=TRUE)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"configuration-file","dir":"Articles","previous_headings":"","what":"Configuration file","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"column names given GWAS file may consistent TwoSampleMR package naming conventions. TwoSampleMR provides function TwoSampleMR::format_data appropriately rename columns, well extra data checking imputation processing. configure correctly need provide column mapping config.yml file constructor package’s GWAS class. example config.yml structure can opened R get_default_gwas_config() command - copy saved adjusted needed.","code":"# File path to the config file; set open_file=TRUE to also open the file in RStudio fp <- get_default_gwas_config(open_file=FALSE) fp #> [1] \"/home/runner/work/_temp/Library/MRLipidInfection/extdata/config/default_gwas.yml\"  # Set the config file for the GLGC GWAS data config <- system.file(\"extdata/config/glgc_gwas.yml\", package = \"MRLipidInfection\") config #> [1] \"/home/runner/work/_temp/Library/MRLipidInfection/extdata/config/glgc_gwas.yml\"  # View the structure of the default config file knitr::kable(data.frame(\"old_name\" = unname(unlist(yaml::read_yaml(fp))),                          \"new_name\" = names(yaml::read_yaml(fp))))"},{"path":[]},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"lipid-profile-data","dir":"Articles","previous_headings":"Exposure data","what":"Lipid profile data","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"Next must obtain data exposure. interested whether exposure lipid lowering medications influences risk developing sepsis. exact data readily available population level many confounding factors. therefore estimate effect genetically proxied lipid medication therapy looking Single Nucleotide Polymorphisms (SNPs) close proximity known lipid metabolism genes (HMG-CoA Reductase, NPC1L1, PCSK9, CETP) significantly associated circulating lipid levels. use latest Global Lipids Genetics Consortium Ancestry-specific GWAS summary statistics lipid components: HDL-C, LDL-C, nonHDL-C, TC TG. using sepsis outcome data UK BioBank use data excluding UK BioBank avoid overlap exposure outcome populations. create custom GWAS object lipid component. Internally, GWAS object reads data file provided parameter file_path. file_path URL file first downloaded package downloads directory extracted. Warning GLGC GWAS data files large take time download. However, creating GWAS objects file_path result much quicker loading class first checks whether file already downloaded. 47 million SNPs datasets. need filter GWAS data SNPs associated circulating lipid levels statistical significance p<5e-8. threshold passed GWAS object instantiation. Internally, GWAS caches filters SNPs .csv file within package structure. loaded instead command re-run (behaviour can overridden passing overwrite=TRUE GWAS constructor).","code":"# List the URLs of the data sources urls_lst <- list(   \"LDL\"    = \"http://csg.sph.umich.edu/willer/public/glgc-lipids2021/results/ancestry_specific/without_UKB_LDL_INV_EUR_HRC_1KGP3_others_ALL.meta.singlevar.results.gz\",   \"HDL\"    = \"http://csg.sph.umich.edu/willer/public/glgc-lipids2021/results/ancestry_specific/without_UKB_HDL_INV_EUR_HRC_1KGP3_others_ALL.meta.singlevar.results.gz\",   \"TC\"     = \"http://csg.sph.umich.edu/willer/public/glgc-lipids2021/results/ancestry_specific/without_UKB_TC_INV_EUR_HRC_1KGP3_others_ALL.meta.singlevar.results.gz\",   \"nonHDL\" = \"http://csg.sph.umich.edu/willer/public/glgc-lipids2021/results/ancestry_specific/without_UKB_nonHDL_INV_EUR_HRC_1KGP3_others_ALL.meta.singlevar.results.gz\",   \"TG\"     = \"http://csg.sph.umich.edu/willer/public/glgc-lipids2021/results/ancestry_specific/without_UKB_logTG_INV_EUR_HRC_1KGP3_others_ALL.meta.singlevar.results.gz\" ) ##Example GWAS object test_filepath <- system.file(\"testdata\", \"test_data.csv\",   package=\"MRLipidInfection\") test_config   <- system.file(\"testdata\", \"test_config.yml\", package=\"MRLipidInfection\") testGWAS      <- GWAS(file_path = test_filepath,                        config    = test_config,                        name      = \"test\",                        type      = \"exposure\")  ## GWAS object structure str(testGWAS) #> Formal class 'GWAS' [package \"MRLipidInfection\"] with 10 slots #>   ..@ type     : chr \"exposure\" #>   ..@ name     : chr \"test\" #>   ..@ file_path: chr \"/home/runner/work/_temp/Library/MRLipidInfection/testdata/test_data.csv\" #>   ..@ config   : chr \"/home/runner/work/_temp/Library/MRLipidInfection/testdata/test_config.yml\" #>   ..@ overwrite: logi FALSE #>   ..@ sig_pval : num 5e-08 #>   ..@ col_map  :List of 13 #>   .. ..$ type             : chr \"exposure\" #>   .. ..$ phenotype_col    : chr \"Phenotype\" #>   .. ..$ snp_col          : chr \"SNP\" #>   .. ..$ beta_col         : chr \"beta\" #>   .. ..$ se_col           : chr \"se\" #>   .. ..$ eaf_col          : chr \"eaf\" #>   .. ..$ effect_allele_col: chr \"effect_allele\" #>   .. ..$ other_allele_col : chr \"other_allele\" #>   .. ..$ pval_col         : chr \"pval\" #>   .. ..$ samplesize_col   : chr \"samplesize\" #>   .. ..$ id_col           : chr \"id\" #>   .. ..$ chr_col          : chr \"chr\" #>   .. ..$ pos_col          : chr \"pos\" #>   ..@ data     :Classes 'data.table' and 'data.frame':   9 obs. of  15 variables: #>   .. ..$ SNP                   : chr [1:9] \"rs1123571\" \"rs903911\" \"rs6698680\" \"rs6685829\" ... #>   .. ..$ chr.exposure          : int [1:9] 1 1 1 1 1 1 1 1 1 #>   .. ..$ pos.exposure          : int [1:9] 2326009 2326812 2329661 2330016 2330190 2332391 2338126 2339139 2339427 #>   .. ..$ other_allele.exposure : chr [1:9] \"G\" \"A\" \"A\" \"C\" ... #>   .. ..$ effect_allele.exposure: chr [1:9] \"A\" \"G\" \"G\" \"T\" ... #>   .. ..$ samplesize.exposure   : int [1:9] 808038 810508 810507 808046 813372 821075 810363 787211 787211 #>   .. ..$ eaf.exposure          : num [1:9] 0.473 0.474 0.474 0.499 0.473 0.469 0.449 0.441 0.412 #>   .. ..$ beta.exposure         : num [1:9] -0.0111 -0.0108 -0.0107 -0.0106 -0.0109 ... #>   .. ..$ se.exposure           : num [1:9] 0.00169 0.00169 0.00169 0.00169 0.00169 ... #>   .. ..$ pval.exposure         : num [1:9] 5.26e-11 1.45e-10 2.32e-10 3.00e-10 1.13e-10 ... #>   .. ..$ id.exposure           : chr [1:9] NA NA NA NA ... #>   .. ..$ exposure              : chr [1:9] \"LDL\" \"LDL\" \"LDL\" \"LDL\" ... #>   .. ..$ mr_keep.exposure      : logi [1:9] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   .. ..$ pval_origin.exposure  : chr [1:9] \"reported\" \"reported\" \"reported\" \"reported\" ... #>   .. ..$ gene.exposure         : chr [1:9] NA NA NA NA ... #>   .. ..- attr(*, \".internal.selfref\")=<externalptr>  #>   ..@ use_flag : logi [1:9] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   ..@ gen_reg  :Formal class 'GenomeRegion' [package \"MRLipidInfection\"] with 12 slots #>   .. .. ..@ genome_wide: logi TRUE #>   .. .. ..@ name       : chr NA #>   .. .. ..@ assembly   : chr \"GRCh37\" #>   .. .. ..@ chromosome : num NA #>   .. .. ..@ start      : num NA #>   .. .. ..@ end        : num NA #>   .. .. ..@ cis_tol    : num 3e+05 #>   .. .. ..@ clump_r2   : num 0.001 #>   .. .. ..@ clump_kb   : num 10000 #>   .. .. ..@ clump_p1   : num 1 #>   .. .. ..@ clump_p2   : num 1 #>   .. .. ..@ pop        : chr \"EUR\" # Create a list of GWAS objects using the GLGC data lipids_gwas_lst <- purrr::map2(.x = unname(urls_lst),                                .y = names(urls_lst),                                 .f = ~GWAS(file_path = .x,                                            name      = .y,                                           config    = config,                                           type      = \"exposure\",                                           sig_pval  = 5e-8))"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"cis-acting-lipid-metabolism-gene-snps","dir":"Articles","previous_headings":"Exposure data","what":"Cis-acting lipid metabolism gene SNPs","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"create set exposure SNPs subset SNPs associate 5 lipid components: HDL-C, LDL-C, nonHDL-C, TC TG. subset SNPs close proximity genes interest (HMG-CoA Reductase, NPC1L1, PCSK9, CETP). Data regarding positions genes available online. latest lipid data GLGC uses Genome Reference Consortium Human Reference 37 (GRCh37) Assembly must use referring position genes. First, create list objects class GenomeRegion - simple custom S4 class containing gene information. addition, look SNPs across whole genome associate lipid profile components (set genome_wide=TRUE). GWAS object internal slot GenomeRegion object determine appropriate SNP filtering (e.g. keeping SNPs around certain genome region / gene). Next create exposure data lipid component GWAS GenomeRegion. Hence n = length(lipids_gwas_lst) x length(genome_regions_list) exposure datasets.","code":"# The HMG-CoA-R, NPC1L1, and PCSK9 genes; set the 'cis' base tolerance here. genome_regions_lst = list(   GenomeRegion(name=\"HMGCR\",  genome_wide=FALSE, chromosome=5,  start=74632993, end=74657941, cis_tol=1e5, clump_r2=0.2),   GenomeRegion(name=\"NPC1L1\", genome_wide=FALSE, chromosome=7,  start=44552134, end=44580929, cis_tol=1e5, clump_r2=0.2),   GenomeRegion(name=\"PCSK9\",  genome_wide=FALSE, chromosome=1,  start=55505221, end=55530525, cis_tol=1e5, clump_r2=0.2),   GenomeRegion(name=\"CETP\",   genome_wide=FALSE, chromosome=16, start=56995862, end=57017757, cis_tol=1e5, clump_r2=0.2),   GenomeRegion(name=\"GenomeWide\", genome_wide=TRUE, clump_r2=0.001) ) # Create all the permutations of lipid components (#5) and genome regions (#5) = #25 datasets lipid_gene_perms_lst <- purrr::map2(   .x = rep(lipids_gwas_lst,    times=length(genome_regions_lst)),   .y = rep(genome_regions_lst, each =length(lipids_gwas_lst)),    .f = ~ `genome_region<-`(.x, .y) )"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"clumping-snps","dir":"Articles","previous_headings":"Exposure data","what":"Clumping SNPs","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"Many SNPs highly correlated, .e. genetically linked provide additional information whole set correlated SNPs. reduce number SNPs significantly associated lipid levels use Linkage Disequilibrium clumping. Clumping reports significant genetic associations region terms smaller number “clumps” genetically linked SNPs. SNPs correlated R2 greater value, clump_r2, clumped - .e. SNP lower p-value removed. process iterative several parameters: clump_kb, clump_r2, clump_p. use defaults, except clump_r2 , set leniently, instead default 0.001, due fact looking cis-acting SNPs correlated virtue proximity genes interest. Clumping parameters passed part GenomeRegion object (). Bristol IEU severs using function TwoSampleMR::clump_data.","code":"# Run clumping lipid_gene_perms_clump_lst <- purrr::map(lipid_gene_perms_lst, clump_snps)  purrr::map_int(lipid_gene_perms_clump_lst, ~sum(.x@use_flag))"},{"path":[]},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"sepsis","dir":"Articles","previous_headings":"Outcome data","what":"Sepsis","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"outcome interested sepsis. several GWAS relating whether patient develops sepsis underlying SNPs. Several studies available IEU GWAS database can queried using either TwoSampleMR ieugwasr R packages.","code":"# List of available GWAS summary statistics available_gwas <- ieugwasr::gwasinfo() |>      # Filter for those that mention 'sepsis' in the 'trait' description column   dplyr::filter(grepl(\"sepsis|pneumonia\", .data$trait, ignore.case=TRUE))  # We will pick a few sepsis GWAS outcome_gwas_id <- c(\"ieu-b-5086\", \"ieu-b-5088\", \"ieu-b-4982\",                       \"ieu-b-4980\", \"ieu-b-4981\", \"ieu-b-69\")"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"extracting-outcome-data","dir":"Articles","previous_headings":"Outcome data","what":"Extracting outcome data","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"identified GWAS summary statistics next need extract data SNPs interest (highly predictive exposure, case components blood lipid profile).","code":"# Extract data for cis-gene SNPs outcome_data <- purrr::map(.x = lipid_gene_perms_clump_lst,                            .f = ~ TwoSampleMR::extract_outcome_data(                               snps            = .x@data$SNP[.x@use_flag],                               outcomes        = outcome_gwas_id,                               proxies         = TRUE,                               rsq             = 0.8,                               align_alleles   = 1,                               palindromes     = 1,                               maf_threshold   = 0.3,                               access_token    = ieugwasr::check_access_token(),                               splitsize       = 10000,                               proxy_splitsize = 500))"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"harmonising","dir":"Articles","previous_headings":"","what":"Harmonising","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"effects (significant) SNPs lipid levels effect SNPs outcome sepsis. However, important harmonise effects. means effect SNP exposure effect SNP outcome must correspond allele (.e. &Ts C&Gs wrong way round). Note IEU GWAS database contains data already harmonised. information harmonising.","code":"# Filter out the Gene:Lipid SNP associations with no significant SNPs zero_snps <- purrr::map_lgl(lipid_gene_perms_clump_lst, ~ sum(.x@use_flag)==0)  # Harmonise the data for the LDL SNPs across the whole genome harm_dat <- purrr::map2(.x = lipid_gene_perms_clump_lst[!zero_snps],                         .y = outcome_data[!zero_snps],                         .f = ~ TwoSampleMR::harmonise_data(.x@data, .y))"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"two-sample-mendelian-randomisation","dir":"Articles","previous_headings":"","what":"Two Sample Mendelian Randomisation","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"","code":"# The MR result for all of the different scenarios res_dat <- purrr::map(.x = harm_dat,                        .f = ~ TwoSampleMR::mr(.x)) %>%    # Clean up the name"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"effects-and-significance","dir":"Articles","previous_headings":"Two Sample Mendelian Randomisation","what":"Effects and significance","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"","code":"# Prepare the data plot_dat <- purrr::map_df(res_dat, ~ .x |>                              dplyr::select(id.exposure, exposure, outcome, method, b, pval) |>                             dplyr::rename(c(\"gene\" = id.exposure, \"lipid\" = exposure)) |>                             dplyr::mutate(dplyr::across(c(\"gene\", \"lipid\", \"outcome\"), ~as.factor(.x)))) |>   # Ensure present in the data, even if NA   tidyr::complete(gene, lipid, outcome, method) |>   # Just look at IVW for now   dplyr::filter(method == \"Inverse variance weighted\", ) |>   # Deselect to make table nicer   dplyr::select(-method)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"interpretation","dir":"Articles","previous_headings":"Two Sample Mendelian Randomisation","what":"Interpretation","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"Genetically proxied inhibition important lipid metabolism drug targets consistent effect risk developing sepsis across multiple cohorts. Apart CETP appeared significant effects 2 cohorts. continued…","code":""},{"path":[]},{"path":"https://nicksunderland.github.io/MRLipidInfection/articles/MRLipidInfection.html","id":"heatmap","dir":"Articles","previous_headings":"Plots","what":"Heatmap","title":"Genetically Proxied Lipid Therapy And Sepsis","text":"","code":"library(ggplot2)  # Set the significance cutoff p_val_cutoff = 0.05  # Plot heat map of lipid component against lipid regulation genes p <- ggplot(plot_dat, aes(x=lipid, y=gene)) +     # Set the fill tile colour to the p-value     geom_tile(aes(fill=pval)) +      # Set the text to the beta value     geom_text(aes(label = paste(\"\\u03B2\", round(b, 3)))) +     # Set the text to the p value     geom_text(aes(label = paste(\"p =\", round(pval, 3))), nudge_y=-0.15, size=3.5, fontface = \"italic\") +     # Ensure a very sharp colour transition at <0.05 --> green     # Bottom 5% colour scale is green; top 95% colour scale is viridis gradient     scale_fill_gradientn(colors = c(rep(\"green\",50),                                     scales::viridis_pal(option = \"mako\", begin=1, end=0.2)(950)),                          values = seq(0,1, length.out=1000),                          # Set limits to ensure that default min(data)/max(data) is not used                          limits = c(0, 1),                           breaks = c(1.0, 0.75, 0.50, 0.25, p_val_cutoff),                          labels = scales::label_number(accuracy = 0.01)) +      labs(title    =\"MR estimate by lipid metabolism gene and lipid profile component\",           subtitle = \"Colour represents p-value, with bright green colour at cut-off p<0.05\",          x        =\"Lipid component\",           y        = \"Gene\") +   facet_wrap(~outcome, ncol = 1, scales='free')"},{"path":[]},{"path":"https://nicksunderland.github.io/MRLipidInfection/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicholas Sunderland. Author, maintainer.","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sunderland N (2022). MRLipidInfection: Things Run MR Study Lipid Drug Effects Sepsis. R package version 0.0.0.9000, https://nicksunderland.github.io/MRLipidInfection/.","code":"@Manual{,   title = {MRLipidInfection: Things To Run An MR Study Of Lipid Drug Effects On Sepsis},   author = {Nicholas Sunderland},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://nicksunderland.github.io/MRLipidInfection/}, }"},{"path":"https://nicksunderland.github.io/MRLipidInfection/index.html","id":"mrlipidinfection","dir":"","previous_headings":"","what":"MRLipidInfection","title":"Things To Run An MR Study Of Lipid Drug Effects On Sepsis","text":"package trying Mendelian Randomisation techniques.","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Things To Run An MR Study Of Lipid Drug Effects On Sepsis","text":"can install latest version MRLipidInfection R using:","code":"remotes::install_github(\"nicksunderland/MRLipidInfection\")"},{"path":"https://nicksunderland.github.io/MRLipidInfection/index.html","id":"projects","dir":"","previous_headings":"","what":"Projects","title":"Things To Run An MR Study Of Lipid Drug Effects On Sepsis","text":"Please see “Getting started” tab initial analysis run. https://nicksunderland.github.io/MRLipidInfection/","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/GWAS-class.html","id":null,"dir":"Reference","previous_headings":"","what":"GWAS class — GWAS-class","title":"GWAS class — GWAS-class","text":"class handles GWAS data making easy import external GWASs, manipulate quickly retrieve results loaded cached .csv files. uses TwoSampleMR::format_data() format data requires config.yml file represents mapping data source column names TwoSampleMR::format_data() function parameters. constructor also takes sig_pval value used filter SNP data imported file_path.","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/GWAS-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GWAS class — GWAS-class","text":"GWAS object","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/GWAS-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"GWAS class — GWAS-class","text":"type character. \"exposure\" \"outcome\". file_path character. file path gwas file can read data.table::fread() config character. path yaml file column config information name character. name GWAS sig_pval numeric. significance level filter SNPs col_map list. named list new_column --> old_column names - read config.yml file path. overwrite logical. whether overwrite cached data files data data.table. GWAS SNP data use_flag logical vector. SNPs use analysis; length nrow(data) gen_reg GenomeRegion. GenomeRegion object defining filter SNP data","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/GenomeRegion-class.html","id":null,"dir":"Reference","previous_headings":"","what":"GenomeRegion class — GenomeRegion-class","title":"GenomeRegion class — GenomeRegion-class","text":"class defines area genome handles various parameters passed LD clumping algorithms. useful working SNPs surrounding multiple gene targets interest. perform normal genome wide SNP clumping simply create GenomeRegion object 'genome_wide=TRUE'.","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/GenomeRegion-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GenomeRegion class — GenomeRegion-class","text":"GenomeRegion object","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/GenomeRegion-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"GenomeRegion class — GenomeRegion-class","text":"name character. name gene area genome referred . assembly character. assembly information, e.g. GRCh37 chromosome numeric. chromosome gene . start numeric. start gene (number bases start chromosome). end numeric. end gene (number bases start chromosome). cis_tol defining SNPs relation specific gene, set tolerance many bases either side gene include SNP genome_wide usually FALSE; TRUE treated object placeholder refer 'whole genome' clump_kb numeric. Clumping window, default 10000. clump_r2 numeric. Clumping r2 cutoff. clump_p1 numeric. Clumping sig level index SNPs, default 1. clump_p2 numeric. Clumping sig level secondary SNPs, default 1. pop character. Super-population use reference panel. Default = \"EUR\". Options EUR, SAS, EAS, AFR, AMR. 'legacy' also available - previously used version EUR panel slightly different set markers","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/clump_snps-GWAS-method.html","id":null,"dir":"Reference","previous_headings":"","what":"clump_snps — clump_snps,GWAS-method","title":"clump_snps — clump_snps,GWAS-method","text":"clump_snps","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/clump_snps-GWAS-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clump_snps — clump_snps,GWAS-method","text":"","code":"# S4 method for GWAS clump_snps(object, do_local = FALSE)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/clump_snps-GWAS-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clump_snps — clump_snps,GWAS-method","text":"object GWAS object do_local run local machine, false IEU servers","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/clump_snps-GWAS-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clump_snps — clump_snps,GWAS-method","text":"GWAS object use_flag adjusted SNPs left data clumping","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/clump_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"clump_snps generic function — clump_snps","title":"clump_snps generic function — clump_snps","text":"clump_snps generic function","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/clump_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clump_snps generic function — clump_snps","text":"","code":"clump_snps(object, do_local = FALSE)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/clump_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clump_snps generic function — clump_snps","text":"object GWAS object do_local run local machine, false IEU servers","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/clump_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clump_snps generic function — clump_snps","text":"GWAS object clumped data","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/extract_snps-GWAS-method.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_snps — extract_snps,GWAS-method","title":"extract_snps — extract_snps,GWAS-method","text":"extract_snps","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/extract_snps-GWAS-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_snps — extract_snps,GWAS-method","text":"","code":"# S4 method for GWAS extract_snps(object)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/extract_snps-GWAS-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_snps — extract_snps,GWAS-method","text":"object GWAS class object","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/extract_snps-GWAS-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_snps — extract_snps,GWAS-method","text":"valid GWAS class object SNP extracted data slot based provided filtering parameters","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/extract_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_snps — extract_snps","title":"extract_snps — extract_snps","text":"generic function extract_snps","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/extract_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_snps — extract_snps","text":"","code":"extract_snps(object)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/extract_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_snps — extract_snps","text":"object GWAS objects","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/extract_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_snps — extract_snps","text":"GWAS object SNPs extracted data field","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/genome_region-set-GWAS-GenomeRegion-method.html","id":null,"dir":"Reference","previous_headings":"","what":"set genome_region — genome_region<-,GWAS,GenomeRegion-method","title":"set genome_region — genome_region<-,GWAS,GenomeRegion-method","text":"set genome_region","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/genome_region-set-GWAS-GenomeRegion-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set genome_region — genome_region<-,GWAS,GenomeRegion-method","text":"","code":"# S4 method for GWAS,GenomeRegion genome_region(object) <- value"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/genome_region-set-GWAS-GenomeRegion-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set genome_region — genome_region<-,GWAS,GenomeRegion-method","text":"object valid GWAS object value valid GenomeRegion object","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/genome_region-set-GWAS-GenomeRegion-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set genome_region — genome_region<-,GWAS,GenomeRegion-method","text":"valid GWAS object GenomeRegion set","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/genome_region-set.html","id":null,"dir":"Reference","previous_headings":"","what":"set genome_region generic function — genome_region<-","title":"set genome_region generic function — genome_region<-","text":"set genome_region generic function","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/genome_region-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set genome_region generic function — genome_region<-","text":"","code":"genome_region(object) <- value"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/genome_region-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set genome_region generic function — genome_region<-","text":"object valid GWAS object value valid GenomeRegion object","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/genome_region-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set genome_region generic function — genome_region<-","text":"valid GWAS object GenomeRegion set","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_b_file.html","id":null,"dir":"Reference","previous_headings":"","what":"get_b_file() — get_b_file","title":"get_b_file() — get_b_file","text":"get_b_file()","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_b_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_b_file() — get_b_file","text":"","code":"get_b_file(ancestry = \"EUR\")"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_b_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_b_file() — get_b_file","text":"ancestry default European 'EUR'","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_b_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_b_file() — get_b_file","text":"file path ld reference panel 'B' files","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_default_gwas_config.html","id":null,"dir":"Reference","previous_headings":"","what":"get_default_gwas_config — get_default_gwas_config","title":"get_default_gwas_config — get_default_gwas_config","text":"opens default config file returns path","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_default_gwas_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_default_gwas_config — get_default_gwas_config","text":"","code":"get_default_gwas_config(open_file = FALSE)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_default_gwas_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_default_gwas_config — get_default_gwas_config","text":"open_file whether open file R","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_default_gwas_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_default_gwas_config — get_default_gwas_config","text":"file path","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_downloads_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"get_downloads_dir() — get_downloads_dir","title":"get_downloads_dir() — get_downloads_dir","text":"get_downloads_dir()","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_downloads_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_downloads_dir() — get_downloads_dir","text":"","code":"get_downloads_dir(subdir = NA)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_downloads_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_downloads_dir() — get_downloads_dir","text":"subdir provided return full file path subdirectory, within main downloads directory. exist, created.","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_downloads_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_downloads_dir() — get_downloads_dir","text":"absolute file path downloads folder","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_finngen.html","id":null,"dir":"Reference","previous_headings":"","what":"get_finngen() — get_finngen","title":"get_finngen() — get_finngen","text":"Gets FinnGen data - downloads package downloads directory","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_finngen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_finngen() — get_finngen","text":"","code":"get_finngen(filename, type = \"summary_stats\", overwrite = FALSE)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_finngen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_finngen() — get_finngen","text":"filename FinnGen file name, string type FinnGen data type; one 'summary_stats', 'finemapping', 'annotations', 'covid' overwrite logical whether overwrite file","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_finngen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_finngen() — get_finngen","text":"tibble containing data","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_web_file.html","id":null,"dir":"Reference","previous_headings":"","what":"get_web_file() — get_web_file","title":"get_web_file() — get_web_file","text":"Gets web based file downloads packages downloads directory (inst/extdata)","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_web_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_web_file() — get_web_file","text":"","code":"get_web_file(url, directory = NA, overwrite = FALSE)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_web_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_web_file() — get_web_file","text":"url url file download directory either NA (download main downloads directory - inst/extdata), full directory path (downloads ), string (used create subdirectory within main downloads directory - inst/extdata/new_directory) overwrite whether overwrite file","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/get_web_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_web_file() — get_web_file","text":"file path data","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/initialize-GWAS-method.html","id":null,"dir":"Reference","previous_headings":"","what":"initialize — initialize,GWAS-method","title":"initialize — initialize,GWAS-method","text":"custom initialize function / constructor GWAS class","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/initialize-GWAS-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialize — initialize,GWAS-method","text":"","code":"# S4 method for GWAS initialize(.Object, ...)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/initialize-GWAS-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"initialize — initialize,GWAS-method","text":".Object GWAS class object ... arguments passed GWAS class instantiation","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/initialize-GWAS-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"initialize — initialize,GWAS-method","text":"GWAS object","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/setupMRLipidInfection.html","id":null,"dir":"Reference","previous_headings":"","what":"setupMRLipidInfection — setupMRLipidInfection","title":"setupMRLipidInfection — setupMRLipidInfection","text":"Calling function download 1000 genomes LD reference panel Package's install directory. also ensure PLINK installed locally download . last thing ensure correct downloads directory exists calling get_downloads_dir()","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/setupMRLipidInfection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setupMRLipidInfection — setupMRLipidInfection","text":"","code":"setupMRLipidInfection(skip_local_download = TRUE)"},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/setupMRLipidInfection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setupMRLipidInfection — setupMRLipidInfection","text":"skip_local_download whether skip LD reference panel PLINK downloads","code":""},{"path":"https://nicksunderland.github.io/MRLipidInfection/reference/setupMRLipidInfection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setupMRLipidInfection — setupMRLipidInfection","text":"side effect setup functions (see )","code":""}]
